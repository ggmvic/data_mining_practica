---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}

paste("Hay",nrow(df_seeds), "filas y", ncol(df_seeds), "columnas.")
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

``` {r}
df_seeds$tipo = factor(df_seeds$tipo, levels=c(1:3), labels = c("Kama", "Rosa", "Canadian"))
df_seeds

```


#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
aggregate(df_seeds$area, by=list(df_seeds$tipo), mean)
```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: 'Este tipo de gráfico se llama diagrama de caja y bigotes. La línea del centro representa la mediana.'

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
library(ggplot2)
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo)) +
  geom_point(size=3) + 
  scale_color_manual(values = c("red", "blue","green"))
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds

```

**Respuesta**: 'Te añade una nueva columna al dataframe llamada is_kama con valor booleano, que devuelve TRUE si la columna tipo es Kama y FALSE si no lo es'

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]

df_seeds_train
df_seeds_test
```

**Respuesta**: 'Es aconsejable porque no se pueden destinar todos los datos al entrenamiento del modelo, porque si no, este estará sobreajustado y su capacidad de generalización no será óptima. Por ello se destina una parte aleatoria de los datos al entrenamiento, y el resto a su evaluación.'

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: 'Regresión logística.'

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
library(caret)

set.seed(123) 
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]


modelo <- glm(is_kama ~ area + perimetro + compacto + longitud + coeficient.asimetria + longitud.ranura, data = df_seeds_train, family = binomial())

```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
pred <- predict(modelo,df_seeds_test, type="response")
print("Matriz de confusión")
M <- table(real= df_seeds_test$is_kama, predicho=pred>0.5)

paste("La precisión es:",M[2,2]/(M[1,2]+M[2,2]))
paste("La exhaustividad es:",M[2,2]/(M[2,1]+M[2,2]))
```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: 'Dadas unas columnas del dataframe df_seeds, utiliza la función kmeans(3) para dividir el dataset en 3 clusters y guardar los resultados en la variable c1. Luego crea una tabla en la que se relacionan los datos del dataframe original con los del cluster'
